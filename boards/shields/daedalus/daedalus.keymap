/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/*
#define DEFAULT 0
#define NAV 1
#define MEDIA 2
#define NUMBERS 3
#define SYMB 4
#define FUNC 5
#define EX1 6
#define EX2 7
*/

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                bindings = <
/*-------------------------------------------
| Q | W | F | P | B |  | J | L | U | Y | ' |
| A | R | S | T | G |  | M | N | E | I | O |
| X | C | V | D | Z |  | K | H | , | . | / |
        |DEL|BSP|TAB|  |ENT|SPC|ESC|
        (MED|NAV|   )  (SYM|NUM|FNC)
---------------------------------------------*/
&kp Q          &kp W          &kp F              &kp P            &kp B              &kp J          &kp L             &kp U               &kp Y           &kp APOSTROPHE
&mt LEFT_GUI A &mt LEFT_ALT R &mt LEFT_CONTROL S &mt LEFT_SHIFT T &kp G              &kp M          &mt RIGHT_SHIFT N &mt RIGHT_CONTROL E &mt RIGHT_ALT I &mt RIGHT_GUI O
&kp X          &kp C          &kp V              &kp D            &kp Z              &kp K          &kp H             &kp COMMA           &kp DOT         &kp FSLH
                              &lt 2 DEL      &lt 1 BSPC     &kp TAB      &lt 4 ENTER &lt 3 SPACE &lt 5 ESC
                >;
                /*Binding for the encoder*/
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                nav {
/*-------------------------------------------
|   |   |   |   |   |  |RED|PST|CPY|CUT|UND|
|GUI|ALT|CRL|SHF|   |  |CPS|LFT|DWN|UPA|RHT|
|   |   |   |   |   |  |INS|HME|PDW|PUP|END|
        |DEL|BSP|TAB|  |ENT|SPC|ESC|
---------------------------------------------*/
                bindings = <
&trans       &trans       &trans           &trans         &trans        &kp K_REDO   &kp K_PASTE    &kp K_COPY     &kp K_CUT     &kp K_UNDO
&mo LEFT_GUI &mo LEFT_ALT &mo LEFT_CONTROL &mo LEFT_SHIFT &trans        &kp CAPSLOCK &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW  &kp RIGHT_ARROW
&trans       &trans       &trans           &trans         &trans        &kp INSERT   &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END
                          &trans           &trans         &trans        &trans           &trans         &trans
                >;
                };
                media {
/*-------------------------------------------
|BLD|   |   |   |RST|  |   |   |   |   |   |
|GUI|ALT|CRL|SHF|   |  |   |PRV|VUP|VDN|NXT|
|   |   |   |   |   |  |   |   |   |   |   |
        |DEL|BSP|TAB|  |STP|PLP|MUT|
---------------------------------------------*/
                bindings = <
&bootloader       &studio_unlock       &trans           &trans         &sys_reset        &trans     &trans           &trans            &trans          &trans
&mo LEFT_GUI   &mo LEFT_ALT &mo LEFT_CONTROL &mo LEFT_SHIFT &trans                 &trans     &kp K_PREV       &kp K_VOLUME_DOWN &kp K_VOLUME_UP &kp K_NEXT
&trans         &trans       &trans           &trans         &trans                 &trans     &trans           &trans            &trans          &trans
                            &trans           &trans         &trans                 &kp C_STOP &kp K_PLAY_PAUSE &kp C_MUTE
                >;
                };
                numbers {
/*-------------------------------------------
| [ | 7 | 8 | 9 | ] |  |   |   |   |   |   |
| ; | 4 | 5 | 6 | = |  |   |SHF|CRL|ALT|GUI|
| ` | 1 | 2 | 3 | \ |  |   |   |   |   |   |
        | . | 0 | - |  |   |   |   |
---------------------------------------------*/
                bindings = <
&kp LEFT_BRACKET &kp N1 &kp N2 &kp N3  &kp RIGHT_BRACKET        &trans &trans          &trans            &trans        &trans
&kp SEMICOLON    &kp N4 &kp N5  &kp N6 &kp EQUAL                &trans &mo RIGHT_SHIFT &mo RIGHT_CONTROL &mo RIGHT_ALT &mo RIGHT_GUI
&kp GRAVE        &kp N7 &kp N8  &kp N9 &kp BACKSLASH            &trans &trans          &trans            &trans        &trans
                        &kp DOT &kp N0 &kp MINUS                &trans &trans          &trans
                >;
                };
                symbols {
/*-------------------------------------------
| { | & | * | ( | } |  |   |   |   |   |   |
| : | $ | % | ^ | + |  |   |SHF|CRL|ALT|GUI|
| ~ | ! | @ | # | | |  |   |   |   |   |   |
        | ( | ) | _ |  |   |   |   |
---------------------------------------------*/
                bindings = <
&kp LEFT_BRACE &kp AMPERSAND   &kp ASTERISK &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE        &trans &trans          &trans            &trans        &trans
&kp COLON      &kp DOLLAR      &kp PERCENT  &kp CARET             &kp PLUS               &trans &mo RIGHT_SHIFT &mo RIGHT_CONTROL &mo RIGHT_ALT &mo RIGHT_GUI
&kp TILDE      &kp EXCLAMATION &kp AT_SIGN  &kp HASH              &kp PIPE               &trans &trans          &trans            &trans        &trans
                       &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp UNDERSCORE         &trans &trans          &trans
                >;
                };
                functions {
/*-------------------------------------------
|F10|F1 |F2 |F3 |PTS|  |   |RST|   |   |BOT|
|F11|F4 |F5 |F6 |   |  |   |SHF|CRL|ALT|GUI|
|F12|F1 |F2 |F3 |   |  |   |   |   |   |   |
        |APP|SPC|TAB|  |   |   |   |
---------------------------------------------*/
                bindings = <
&kp F10  &kp F1 &kp F2     &kp F3    &kp PRINTSCREEN         &sys_reset &trans          &trans            &trans        &bootloader
&kp F11  &kp F4 &kp F5     &kp F6    &trans                  &trans     &mo RIGHT_SHIFT &mo RIGHT_CONTROL &mo RIGHT_ALT &mo RIGHT_GUI
&kp F12  &kp F7 &kp F8     &kp F9    &trans                  &trans     &trans          &trans            &trans        &trans
                &kp K_MENU &kp SPACE &kp TAB                 &trans     &trans          &trans
                >;
                };
                // Extra layers for changes with ZMK Config
                extra1 {
                        status = "reserved";
                };
                extra2 {
                        status = "reserved";
                };
                sensors {
                        compatible = "zmk, keymap-sensors";
                        sensors = <&left_encoder>;
                        triggers-per-rotation = <20>; // Same as steps, still unknown
                };
        };
};
